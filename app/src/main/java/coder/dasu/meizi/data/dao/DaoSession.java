package coder.dasu.meizi.data.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import coder.dasu.meizi.data.entity.DayPublish;
import coder.dasu.meizi.data.entity.Data;

import coder.dasu.meizi.data.dao.DayPublishDao;
import coder.dasu.meizi.data.dao.DataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dayPublishDaoConfig;
    private final DaoConfig dataDaoConfig;

    private final DayPublishDao dayPublishDao;
    private final DataDao dataDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dayPublishDaoConfig = daoConfigMap.get(DayPublishDao.class).clone();
        dayPublishDaoConfig.initIdentityScope(type);

        dataDaoConfig = daoConfigMap.get(DataDao.class).clone();
        dataDaoConfig.initIdentityScope(type);

        dayPublishDao = new DayPublishDao(dayPublishDaoConfig, this);
        dataDao = new DataDao(dataDaoConfig, this);

        registerDao(DayPublish.class, dayPublishDao);
        registerDao(Data.class, dataDao);
    }
    
    public void clear() {
        dayPublishDaoConfig.clearIdentityScope();
        dataDaoConfig.clearIdentityScope();
    }

    public DayPublishDao getDayPublishDao() {
        return dayPublishDao;
    }

    public DataDao getDataDao() {
        return dataDao;
    }

}
